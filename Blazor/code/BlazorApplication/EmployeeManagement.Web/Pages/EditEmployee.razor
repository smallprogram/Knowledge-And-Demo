@page "/editemployee/{id}"
@page "/createemployee"

@inherits EditEmployeeBase



<EditForm Model="@EditEmployeeModel" OnValidSubmit="HandleValidSubmit">
    <h3>@PageHeader</h3>
    <ObjectGraphDataAnnotationsValidator />
    <ValidationSummary />
    <hr />
    <div class="form-group row">
        <label for="firstName" class="col-sm-2 col-form-label">
            First Name
        </label>
        <div class="col-md-10">
            <InputText id="firstName" class="form-control" placeholder="First Name" @bind-Value="EditEmployeeModel.FirstName" />
            <ValidationMessage For="@(()=>EditEmployeeModel.FirstName)" />
        </div>
    </div>
    <div class="form-group row">
        <label for="lastName" class="col-sm-2 col-form-label">
            Last Name
        </label>
        <div class="col-md-10">
            <InputText id="lastName" class="form-control" placeholder="Last Name" @bind-Value="EditEmployeeModel.LastName" />
            <ValidationMessage For="@(()=>EditEmployeeModel.LastName)" />
        </div>
    </div>
    <div class="form-group row">
        <label for="email" class="col-sm-2 col-form-label">
            Email
        </label>
        <div class="col-md-10">
            <InputText id="email" class="form-control" placeholder="Email" @bind-Value="EditEmployeeModel.Email" />
            <ValidationMessage For="@(()=>EditEmployeeModel.Email)" />
        </div>
    </div>
    <div class="form-group row">
        <label for="confirmEmail" class="col-sm-2 col-form-label">
            Confirm Email
        </label>
        <div class="col-sm-10">
            <InputText id="confirmEmail" class="form-control"
                       @bind-Value="EditEmployeeModel.ConfirmEmail" />
            <ValidationMessage For="@(() => EditEmployeeModel.ConfirmEmail)" />
        </div>
    </div>

    <div class="form-group row">
        <label for="department" class="col-sm-2 col-form-label">
            Department
        </label>
        <div class="col-sm-10">
            <CustomInputSelect id="department" @bind-Value="EditEmployeeModel.DepartmentId" class="form-control">
                @foreach (var dept in Departments)
                {
                    <option value="@dept.DepartmentId">@dept.DepartmentName</option>
                }
            </CustomInputSelect>
        </div>
    </div>
    <div class="form-group row">
        <label for="gender" class="col-sm-2 col-form-label">
            Gender
        </label>
        <div class="col-sm-10">
            <InputSelect id="gender" @bind-Value="EditEmployeeModel.Gender" class="form-control">
                @foreach (var gender in Enum.GetValues(typeof(EmployeeManagement.Model.Gender)))
                {
                    <option value="@gender">@gender</option>
                }
            </InputSelect>
        </div>
    </div>
    <div class="form-group row">
        <label for="dateofbirth" class="col-sm-2 col-form-label">
            Date Of Birth
        </label>
        <div class="col-sm-10">
            <InputDate @bind-Value="EditEmployeeModel.DateOfBrith" class="form-control" @bind-Value:format="yyyy-MM-dd" />
        </div>
    </div>
    @*<div class="form-group row">
            <label for="deptname" class="col-sm-2 col-form-label">
                Depertment Name
            </label>
            <div class="col-sm-10">
                <InputText @bind-Value="EditEmployeeModel.Department.DepartmentName" class="form-control" />
                <ValidationMessage For="@(() => EditEmployeeModel.Department)" />
            </div>
        </div>*@

    <button type="submit" class="btn btn-primary">Save</button>
    @if (EditEmployeeModel.EmployeeId != Guid.Empty)
    {
        <button class="btn btn-danger" type="button" @onclick="Delete_Click">
            Delete
        </button>
    }

</EditForm>